[{"/home/student/Coding/projects/random_jokes/src/index.tsx":"1","/home/student/Coding/projects/random_jokes/src/reportWebVitals.ts":"2","/home/student/Coding/projects/random_jokes/src/App.tsx":"3","/home/student/Coding/projects/random_jokes/src/MainScreen/index.tsx":"4"},{"size":500,"mtime":1622291487587,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1622291487587,"results":"7","hashOfConfig":"6"},{"size":215,"mtime":1622290465726,"results":"8","hashOfConfig":"6"},{"size":2616,"mtime":1622290465726,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10l9nav",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/home/student/Coding/projects/random_jokes/src/index.tsx",[],"/home/student/Coding/projects/random_jokes/src/reportWebVitals.ts",[],"/home/student/Coding/projects/random_jokes/src/App.tsx",[],"/home/student/Coding/projects/random_jokes/src/MainScreen/index.tsx",["19","20"],"import React, { useEffect, useState } from 'react'\nimport chucnorris from '../images/chucnorris.png'\n// import styled from 'styled-components'\nimport './index.css'\n\nconst MainScreenView: React.FC = () => {\n  const [jokeValue, setJokeValue] = useState('')\n  const [firstName, setFirstName] = useState('Chuck')\n  const [lastName, setLastName] = useState('Norris')\n  // const [jokeWithCategory, setJokeWithCategory] = useState([])\n  // const [selectedCategory, setSelecteCategory] = useState([])\n\n  const apiBase = 'https://api.icndb.com/'\n\n  const fetchJoke: any = async (url: string) => {\n    const response = await fetch(`${apiBase}${url}`)\n\n    if (!response.ok) {\n      throw new Error(\n        `Could not fetch ${url}` + `, received ${response.status}`\n      )\n    }\n    return await response.json()\n  }\n\n  // Get joke randomly\n  const getRandomJoke: any = async () => {\n    setFirstName('')\n    setLastName('')\n    const joke = await fetchJoke(\n      `jokes/random?firstName=${firstName}&lastName=${lastName}`\n    )\n    return setJokeValue(joke.value.joke)\n  }\n\n  useEffect(() => {\n    getRandomJoke()\n  }, [])\n\n  // // Get joke randomly\n  // const getJokeByCategory: any = async (category: string) => {\n  //   const joke = await fetchJoke(`jokes/random?category=${category}`)\n  //   return setJokeValue(joke.value.joke)\n  // }\n\n  // useEffect(() => {\n  //   getJokeByCategory()\n  // }, [])\n\n  // // Get joke with the selected category\n  // const handlingSelectCategory: any = (\n  //   e: React.ChangeEvent<HTMLInputElement>\n  // ) => {\n  //   setSelecteCategory(e.target.value)\n  // }\n\n  // Get joke with the selected category\n  const handlingInputName: any = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value.split(' ')[0])\n    setLastName(e.target.value.substring(firstName.length).trim())\n  }\n\n  return (\n    <div className='container'>\n      <img className='profile' src={chucnorris} alt='chuck norris' />\n      <p className='joke_text'>{jokeValue}</p>\n      <form className='form_container'>\n        <select className='select_category'>\n          <option value='defaultValue'>Select a category</option>\n          <option value='Explicit'>Explicit</option>\n          <option value='Nerdy'>Nerdy</option>\n        </select>\n        <input\n          type='text'\n          className='input_name'\n          onChange={handlingInputName}\n          placeholder='Impersonate Chuck Norris '\n        />\n      </form>\n      <button className='jokeBtn' onClick={getRandomJoke}>\n        Draw a random {firstName} {lastName} Joke\n      </button>\n    </div>\n  )\n}\n\nexport default MainScreenView\n",{"ruleId":"21","severity":1,"message":"22","line":20,"column":34,"nodeType":"23","messageId":"24","endLine":20,"endColumn":35},{"ruleId":"25","severity":1,"message":"26","line":38,"column":6,"nodeType":"27","endLine":38,"endColumn":8,"suggestions":"28"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomJoke'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [getRandomJoke]",{"range":"32","text":"33"},[1111,1113],"[getRandomJoke]"]