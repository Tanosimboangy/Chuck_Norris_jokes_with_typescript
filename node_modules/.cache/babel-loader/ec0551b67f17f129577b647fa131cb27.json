{"ast":null,"code":"var _jsxFileName = \"/home/student/Coding/projects/random_jokes/src/MainScreen/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport chucnorris from '../images/chucnorris.png'; // import styled from 'styled-components'\n\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainScreenView = () => {\n  _s();\n\n  const [jokeValue, setJokeValue] = useState('');\n  const [firstName, setFirstName] = useState('Chuck');\n  const [lastName, setLastName] = useState('Norris'); // const [jokeWithCategory, setJokeWithCategory] = useState([])\n  // const [selectedCategory, setSelecteCategory] = useState([])\n\n  const apiBase = 'https://api.icndb.com/';\n\n  const fetchJoke = async url => {\n    const response = await fetch(`${apiBase}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${response.status}`);\n    }\n\n    return await response.json();\n  }; // Get joke randomly\n\n\n  const getRandomJoke = async () => {\n    setFirstName('');\n    setLastName('');\n    const joke = await fetchJoke(`jokes/random?firstName=${firstName}&lastName=${lastName}`);\n    return setJokeValue(joke.value.joke);\n  };\n\n  useEffect(() => {\n    getRandomJoke();\n  }, []); // // Get joke randomly\n  // const getJokeByCategory: any = async (category: string) => {\n  //   const joke = await fetchJoke(`jokes/random?category=${category}`)\n  //   return setJokeValue(joke.value.joke)\n  // }\n  // useEffect(() => {\n  //   getJokeByCategory()\n  // }, [])\n  // // Get joke with the selected category\n  // const handlingSelectCategory: any = (\n  //   e: React.ChangeEvent<HTMLInputElement>\n  // ) => {\n  //   setSelecteCategory(e.target.value)\n  // }\n  // Get joke with the selected category\n\n  const handlingInputName = e => {\n    setFirstName(e.target.value.split(' ')[0]);\n    setLastName(e.target.value.substring(firstName.length).trim());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"profile\",\n      src: chucnorris,\n      alt: \"chuck norris\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"joke_text\",\n      children: jokeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select_category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"defaultValue\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Explicit\",\n          children: \"Explicit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Nerdy\",\n          children: \"Nerdy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input_name\",\n        onChange: handlingInputName,\n        placeholder: \"Impersonate Chuck Norris \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"jokeBtn\",\n      onClick: getRandomJoke,\n      children: [\"Draw a random \", firstName, \" \", lastName, \" Joke\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainScreenView, \"wg0z/u3Q8NjHsFQ855ocMbhFtaE=\");\n\n_c = MainScreenView;\nexport default MainScreenView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreenView\");","map":{"version":3,"sources":["/home/student/Coding/projects/random_jokes/src/MainScreen/index.tsx"],"names":["React","useEffect","useState","chucnorris","MainScreenView","jokeValue","setJokeValue","firstName","setFirstName","lastName","setLastName","apiBase","fetchJoke","url","response","fetch","ok","Error","status","json","getRandomJoke","joke","value","handlingInputName","e","target","split","substring","length","trim"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport chucnorris from '../images/chucnorris.png'\n// import styled from 'styled-components'\nimport './index.css'\n\nconst MainScreenView: React.FC = () => {\n  const [jokeValue, setJokeValue] = useState('')\n  const [firstName, setFirstName] = useState('Chuck')\n  const [lastName, setLastName] = useState('Norris')\n  // const [jokeWithCategory, setJokeWithCategory] = useState([])\n  // const [selectedCategory, setSelecteCategory] = useState([])\n\n  const apiBase = 'https://api.icndb.com/'\n\n  const fetchJoke: any = async (url: string) => {\n    const response = await fetch(`${apiBase}${url}`)\n\n    if (!response.ok) {\n      throw new Error(\n        `Could not fetch ${url}` + `, received ${response.status}`\n      )\n    }\n    return await response.json()\n  }\n\n  // Get joke randomly\n  const getRandomJoke: any = async () => {\n    setFirstName('')\n    setLastName('')\n    const joke = await fetchJoke(\n      `jokes/random?firstName=${firstName}&lastName=${lastName}`\n    )\n    return setJokeValue(joke.value.joke)\n  }\n\n  useEffect(() => {\n    getRandomJoke()\n  }, [])\n\n  // // Get joke randomly\n  // const getJokeByCategory: any = async (category: string) => {\n  //   const joke = await fetchJoke(`jokes/random?category=${category}`)\n  //   return setJokeValue(joke.value.joke)\n  // }\n\n  // useEffect(() => {\n  //   getJokeByCategory()\n  // }, [])\n\n  // // Get joke with the selected category\n  // const handlingSelectCategory: any = (\n  //   e: React.ChangeEvent<HTMLInputElement>\n  // ) => {\n  //   setSelecteCategory(e.target.value)\n  // }\n\n  // Get joke with the selected category\n  const handlingInputName: any = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value.split(' ')[0])\n    setLastName(e.target.value.substring(firstName.length).trim())\n  }\n\n  return (\n    <div className='container'>\n      <img className='profile' src={chucnorris} alt='chuck norris' />\n      <p className='joke_text'>{jokeValue}</p>\n      <form className='form_container'>\n        <select className='select_category'>\n          <option value='defaultValue'>Select a category</option>\n          <option value='Explicit'>Explicit</option>\n          <option value='Nerdy'>Nerdy</option>\n        </select>\n        <input\n          type='text'\n          className='input_name'\n          onChange={handlingInputName}\n          placeholder='Impersonate Chuck Norris '\n        />\n      </form>\n      <button className='jokeBtn' onClick={getRandomJoke}>\n        Draw a random {firstName} {lastName} Joke\n      </button>\n    </div>\n  )\n}\n\nexport default MainScreenView\n"]},"metadata":{},"sourceType":"module"}